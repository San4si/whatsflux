const _0x32275e = _0x422c; (function (_0x3dd632, _0x4f333d) { const _0xd7a848 = _0x422c, _0x1776f0 = _0x3dd632(); while (!![]) { try { const _0x197494 = parseInt(_0xd7a848(0x148)) / 0x1 + parseInt(_0xd7a848(0x126)) / 0x2 + parseInt(_0xd7a848(0xf5)) / 0x3 * (parseInt(_0xd7a848(0x142)) / 0x4) + -parseInt(_0xd7a848(0x11d)) / 0x5 + parseInt(_0xd7a848(0xe7)) / 0x6 + -parseInt(_0xd7a848(0xdb)) / 0x7 + parseInt(_0xd7a848(0xff)) / 0x8; if (_0x197494 === _0x4f333d) break; else _0x1776f0['push'](_0x1776f0['shift']()); } catch (_0x4ebba8) { _0x1776f0['push'](_0x1776f0['shift']()); } } }(_0x1878, 0xd88e6)); function _0x422c(_0x5bf4e1, _0x4f26bf) { const _0x187812 = _0x1878(); return _0x422c = function (_0x422c28, _0x1047ce) { _0x422c28 = _0x422c28 - 0xd6; let _0x24de93 = _0x187812[_0x422c28]; return _0x24de93; }, _0x422c(_0x5bf4e1, _0x4f26bf); } const { existsSync, unlinkSync, readdir } = require('fs'), { join } = require(_0x32275e(0x10a)), pino = require(_0x32275e(0xf8)), makeWASocket = require(_0x32275e(0x143))[_0x32275e(0x116)], { makeInMemoryStore, Browsers, DisconnectReason, delay, useMultiFileAuthState, getAggregateVotesInPollMessage, downloadMediaMessage, getUrlInfo } = require('@whiskeysockets/baileys'), { toDataURL } = require(_0x32275e(0x10c)), dirName = require(_0x32275e(0x113)), response = require(_0x32275e(0xe2)), { decodeObject, deleteFileIfExists } = require(_0x32275e(0x10f)), fs = require('fs'), path = require('path'), { query } = require(_0x32275e(0xf2)), { webhookIncoming, updateDelivery } = require(_0x32275e(0x112)), { chatbotInit } = require(_0x32275e(0x108)), sessions = new Map(), retries = new Map(), sessionsDir = (_0x38b893 = '') => { const _0x50502a = _0x32275e; return join(dirName, _0x50502a(0x115), _0x38b893 ? _0x38b893 + _0x50502a(0xee) : ''); }, isSessionExists = _0x3086f3 => { const _0x21c314 = _0x32275e; return sessions[_0x21c314(0x13c)](_0x3086f3); }, isSessionFileExists = _0x4dfb16 => { return existsSync(sessionsDir(_0x4dfb16)); }, shouldReconnect = _0x36951d => { const _0x188453 = _0x32275e; let _0x2c21cf = parseInt(0x5), _0x2b1890 = retries[_0x188453(0xed)](_0x36951d) ?? 0x0; _0x2c21cf = _0x2c21cf < 0x1 ? 0x1 : _0x2c21cf; if (_0x2b1890 < _0x2c21cf) return ++_0x2b1890, console[_0x188453(0xf1)](_0x188453(0x13a), { 'attempts': _0x2b1890, 'sessionId': _0x36951d }), retries[_0x188453(0xde)](_0x36951d, _0x2b1890), !![]; return ![]; }, createSession = async (_0x583f80, _0x4b7e0f = ![], _0x4b48fa, _0x13797d, _0x332e20, _0x9c2075 = ![]) => { const _0x4eb36e = _0x32275e, _0xedcb65 = _0x4eb36e(0x127) + _0x583f80, _0x428943 = pino({ 'level': _0x4eb36e(0xfb) }), _0x2694fb = makeInMemoryStore({ 'logger': _0x428943 }), { state: _0x13d4c1, saveCreds: _0x414f07 } = await useMultiFileAuthState(sessionsDir(_0xedcb65)), _0x1fd6e1 = { 'auth': _0x13d4c1, 'printQRInTerminal': ![], 'logger': _0x428943, 'browser': [process[_0x4eb36e(0x136)][_0x4eb36e(0x12e)] || _0x4eb36e(0x151), '', ''], 'defaultQueryTimeoutMs': 0x0, 'markOnlineOnConnect': ![], 'connectTimeoutMs': 0xea60, 'keepAliveIntervalMs': 0x2710, 'generateHighQualityLinkPreview': !![], 'patchMessageBeforeSending': _0x33c201 => { const _0x1eafa7 = _0x4eb36e, _0x17bf34 = !!(_0x33c201[_0x1eafa7(0x105)] || _0x33c201[_0x1eafa7(0x10b)] || _0x33c201['listMessage']); return _0x17bf34 && (_0x33c201 = { 'viewOnceMessage': { 'message': { 'messageContextInfo': { 'deviceListMetadataVersion': 0x2, 'deviceListMetadata': {} }, ..._0x33c201 } } }), _0x33c201; }, 'syncFullHistory': _0x9c2075 || ![], 'getMessage': _0x5bcc71 }; async function _0x5bcc71(_0x3dfc01) { const _0x3107cb = _0x4eb36e; if (_0x2694fb) { const _0x201b0a = await _0x2694fb['loadMessage'](_0x3dfc01?.[_0x3107cb(0xdd)], _0x3dfc01?.['id']); return _0x201b0a?.[_0x3107cb(0x141)] || undefined; } return proto[_0x3107cb(0x109)][_0x3107cb(0x107)]({}); } const _0x3f1a64 = makeWASocket(_0x1fd6e1); !_0x4b7e0f && (_0x2694fb['readFromFile'](sessionsDir(_0x583f80 + _0x4eb36e(0xfe))), _0x2694fb[_0x4eb36e(0x131)](_0x3f1a64['ev'])); sessions[_0x4eb36e(0xde)](_0x583f80, { ..._0x3f1a64, 'store': _0x2694fb, 'isLegacy': _0x4b7e0f }), _0x3f1a64['ev']['on']('creds.update', _0x414f07), _0x3f1a64['ev']['on'](_0x4eb36e(0x145), ({ chats: _0x1fdb92 }) => { const _0x177273 = _0x4eb36e, _0x3ba613 = Date[_0x177273(0x14c)](); _0x1e3a60(_0x1fdb92, _0x3ba613 + _0x177273(0x11f)), _0x4b7e0f && _0x2694fb[_0x177273(0x104)][_0x177273(0x12c)](..._0x1fdb92); }); function _0x2ef793(_0x514d90) { const _0x1d182d = []; return _0x514d90['forEach'](_0x42188e => { const _0x55ddc2 = _0x422c, _0x44ce4c = { 'id': _0x42188e['id'], 'name': _0x42188e['notify'] ? _0x42188e[_0x55ddc2(0x106)] : 'NA' }; _0x1d182d['push'](_0x44ce4c); }), _0x1d182d; } function _0x536ac6(_0x4ea056, _0x164136) { const _0x2df32f = _0x4eb36e, _0x3e509a = path[_0x2df32f(0xf4)](process['cwd'](), 'contacts'), _0xf53b7 = path[_0x2df32f(0xf4)](_0x3e509a, _0x4ea056 + _0x2df32f(0xee)), _0x32600f = JSON[_0x2df32f(0x11a)](_0x164136, null, 0x2); !fs[_0x2df32f(0x150)](_0x3e509a) && fs[_0x2df32f(0xea)](_0x3e509a, { 'recursive': !![] }), !fs['existsSync'](_0xf53b7) ? (fs['writeFileSync'](_0xf53b7, _0x32600f), console['log'](_0x4ea056 + _0x2df32f(0xe9))) : console[_0x2df32f(0xf1)](_0x4ea056 + _0x2df32f(0x13d)); } if (_0x2694fb) { } function _0x1e3a60(_0x515730, _0x50cf60) { const _0x56ab2b = _0x4eb36e, _0x467539 = JSON['stringify'](_0x515730, null, 0x2); fs['writeFileSync'](_0x50cf60, _0x467539, _0x56ab2b(0xe8), _0x550047 => { const _0x1b4aac = _0x56ab2b; _0x550047 ? console[_0x1b4aac(0x134)](_0x1b4aac(0xe1) + _0x50cf60 + ':\x20' + _0x550047) : console[_0x1b4aac(0xf1)]('Data\x20saved\x20to\x20' + _0x50cf60); }); } _0x3f1a64['ev']['on'](_0x4eb36e(0x130), _0x143a70 => { const _0x1118bb = _0x4eb36e, _0xb2cfd5 = _0x143a70[_0x1118bb(0xe4)], _0x81fbaa = _0x143a70['chats'], _0x68ac0e = _0x81fbaa[_0x1118bb(0xfa)](_0x48f4d9 => { _0x48f4d9?.['id']?.['endsWith']('@g.us'); }), _0x528721 = _0x81fbaa[_0x1118bb(0xfa)](_0x39f095 => { _0x39f095?.['id']?.['endsWith']('@s.whatsapp.net'); }), _0x1c0a15 = _0xb2cfd5[_0x1118bb(0xfa)](_0x4cd19f => _0x4cd19f['id'][_0x1118bb(0x144)](_0x1118bb(0x121))), { uid: _0x22017f } = decodeObject(_0x583f80); _0x1c0a15['length'] > 0x0 && _0x536ac6(_0x583f80 + '__two', _0x2ef793(_0x1c0a15), _0x22017f); }), _0x3f1a64['ev']['on']('labels.association', _0xccfa8a => { const _0x2677dd = _0x4eb36e; console[_0x2677dd(0xf1)]({ 'labelData': JSON[_0x2677dd(0x11a)](_0xccfa8a) }); }), _0x3f1a64['ev']['on'](_0x4eb36e(0x12f), _0x1fc12e => { const _0x350966 = _0x4eb36e, { uid: _0x3c4cf6 } = decodeObject(_0x583f80); _0x536ac6(_0x583f80 + _0x350966(0xd8), _0x1fc12e, _0x3c4cf6); }), _0x3f1a64['ev']['on'](_0x4eb36e(0x146), async _0x122bf => { const _0x2fc65c = _0x4eb36e, _0x491edc = _0x122bf[0x0]; if (_0x491edc?.[_0x2fc65c(0x13b)]?.[_0x2fc65c(0xe3)]?.[_0x2fc65c(0x135)] > 0x0) { const _0x192108 = await _0x5bcc71(_0x491edc?.['key']); if (_0x192108) { const _0x35ba34 = getAggregateVotesInPollMessage({ 'message': _0x192108, 'pollUpdates': _0x491edc?.['update']?.[_0x2fc65c(0xe3)] }); updateDelivery(_0x491edc, _0x583f80, _0x35ba34); const _0x56112a = await getSession(_0x583f80), _0x27cb8e = { 'messages': _0x122bf }; chatbotInit(_0x27cb8e, _0x3f1a64, _0x583f80, _0x56112a, _0x35ba34); } } else _0x491edc?.[_0x2fc65c(0x13b)] && _0x491edc?.['key']?.[_0x2fc65c(0xdd)] !== _0x2fc65c(0x125) && _0x491edc?.[_0x2fc65c(0xf6)]?.[_0x2fc65c(0xdd)] && _0x491edc?.[_0x2fc65c(0x13b)]?.['status'] && updateDelivery(_0x491edc, _0x583f80); }); function _0x23bae2(_0x536950, _0x2bdacb) { const _0x3de215 = _0x4eb36e; fs[_0x3de215(0x14b)](_0x536950, JSON[_0x3de215(0x11a)](_0x2bdacb, null, 0x2)); } _0x3f1a64['ev']['on']('messages.upsert', async _0x6f60d4 => { const _0xe7c1a7 = _0x4eb36e, _0x4dd427 = _0x6f60d4[_0xe7c1a7(0x12d)][0x0], _0x7aa3eb = await getSession(_0x583f80); _0x4dd427?.[_0xe7c1a7(0xf6)]?.[_0xe7c1a7(0xdd)] !== _0xe7c1a7(0x125) && _0x6f60d4[_0xe7c1a7(0x137)] === 'notify' && (!_0x4dd427[_0xe7c1a7(0xf6)][_0xe7c1a7(0x10d)] && chatbotInit(_0x6f60d4, _0x3f1a64, _0x583f80, _0x7aa3eb), webhookIncoming(_0x4dd427, _0x583f80, _0x7aa3eb)); }), _0x3f1a64['ev']['on'](_0x4eb36e(0x10e), async _0x3fb6cc => { const _0x3371fb = _0x4eb36e, { connection: _0x4c85db, lastDisconnect: _0x5aadef } = _0x3fb6cc, _0x2c591e = _0x5aadef?.[_0x3371fb(0x134)]?.[_0x3371fb(0xec)]?.[_0x3371fb(0x119)]; _0x4c85db === _0x3371fb(0x149) && retries[_0x3371fb(0xdc)](_0x583f80); if (_0x4c85db === _0x3371fb(0x14d)) { if (_0x2c591e === DisconnectReason[_0x3371fb(0x111)] || !shouldReconnect(_0x583f80)) return _0x13797d && !_0x13797d['headersSent'] && (console['log']('Unable\x20to\x20create\x20session.'), response(_0x13797d, 0x1f4, ![], _0x3371fb(0x14f))), deleteSession(_0x583f80, _0x4b7e0f); setTimeout(() => { createSession(_0x583f80, _0x4b7e0f, _0x13797d, _0x4b48fa, _0x332e20); }, _0x2c591e === DisconnectReason['restartRequired'] ? 0x0 : parseInt(0x1388)); } if (_0x332e20 && !_0x3f1a64[_0x3371fb(0xe5)][_0x3371fb(0x122)][_0x3371fb(0x133)] && _0x3fb6cc['qr']) { if (_0x13797d && !_0x13797d['headersSent']) try { await delay(0x1388); const _0x4a7f62 = _0x4b48fa[_0x3371fb(0x11e)][_0x3371fb(0x147)]; console[_0x3371fb(0xf1)]({ 'phoneNumber': _0x4a7f62 }), console['log'](_0x3371fb(0x139)); const _0x44ff30 = await _0x3f1a64[_0x3371fb(0x14a)](_0x4a7f62); await query(_0x3371fb(0x13e), [_0x44ff30, _0x583f80]), _0x13797d['json']({ 'msg': _0x3371fb(0xd9), 'success': !![], 'code': _0x44ff30 }), _0x13797d[_0x3371fb(0x138)](); return; } catch { response(_0x13797d, 0x1f4, ![], _0x3371fb(0x123)); } try { await _0x3f1a64[_0x3371fb(0xef)](); } catch { } finally { deleteSession(_0x583f80, _0x4b7e0f); } } if (_0x3fb6cc['qr'] && !_0x332e20) { if (_0x13797d && !_0x13797d[_0x3371fb(0xdf)]) try { const _0x5278b3 = await toDataURL(_0x3fb6cc['qr']); await query(_0x3371fb(0x13e), [_0x5278b3, _0x583f80]), _0x13797d[_0x3371fb(0x124)]({ 'success': !![], 'msg': _0x3371fb(0xd9), 'qr': _0x5278b3, 'sessionId': _0x583f80 }), _0x13797d['end'](); return; } catch { response(_0x13797d, 0x1f4, ![], _0x3371fb(0xf9)); } try { await _0x3f1a64[_0x3371fb(0xef)](); } catch { } finally { deleteSession(_0x583f80, _0x4b7e0f); } } }); }, getSession = _0x322b82 => { const _0x492b55 = _0x32275e; return sessions[_0x492b55(0xed)](_0x322b82) ?? null; }, deleteDirectory = _0x24b084 => { const _0x448552 = _0x32275e; fs[_0x448552(0x150)](_0x24b084) && (fs[_0x448552(0x13f)](_0x24b084)[_0x448552(0x128)](_0x1f2ab0 => { const _0x4fc80f = _0x448552, _0x36bddc = _0x24b084 + '/' + _0x1f2ab0; fs[_0x4fc80f(0x118)](_0x36bddc)[_0x4fc80f(0x14e)]() ? deleteDirectory(_0x36bddc) : fs[_0x4fc80f(0x140)](_0x36bddc); }), fs['rmdirSync'](_0x24b084)); }, deleteSession = async (_0x33a6, _0x38a60a = ![]) => { const _0x485df1 = _0x32275e, _0x30e91c = _0x485df1(0x127) + _0x33a6, _0x4c0c32 = _0x33a6 + '_store', _0x515a9d = process[_0x485df1(0xeb)](); deleteFileIfExists(_0x515a9d + _0x485df1(0xd6) + _0x33a6 + _0x485df1(0xee)), isSessionFileExists(_0x30e91c) && deleteDirectory(sessionsDir(_0x30e91c)), isSessionFileExists(_0x4c0c32) && unlinkSync(sessionsDir(_0x4c0c32)), sessions['delete'](_0x33a6), retries[_0x485df1(0xdc)](_0x33a6); }, getChatList = (_0x589f14, _0x450e0f = ![]) => { const _0x30cd10 = _0x32275e, _0x100657 = _0x450e0f ? _0x30cd10(0xf0) : '@s.whatsapp.net'; return getSession(_0x589f14)[_0x30cd10(0x103)][_0x30cd10(0x104)][_0x30cd10(0xfa)](_0x9a96ea => { const _0x458a31 = _0x30cd10; return _0x9a96ea['id'][_0x458a31(0x144)](_0x100657); }); }, isExists = async (_0x4e3732, _0xbae41a, _0x35c604 = ![]) => { const _0x655214 = _0x32275e; console[_0x655214(0xf1)]({ 'jid': _0xbae41a }); try { let _0x386233; if (_0x35c604) return console['log'](_0x655214(0x11b)), _0x386233 = await _0x4e3732[_0x655214(0xd7)](_0xbae41a), Boolean(_0x386233['id']); if (_0x4e3732?.['isLegacy']) _0x386233 = await _0x4e3732[_0x655214(0xf3)](_0xbae41a); else { ;[_0x386233] = await _0x4e3732[_0x655214(0xf3)](_0xbae41a); if (typeof _0x386233 === _0x655214(0x117)) { console[_0x655214(0xf1)]('checked'); const _0xdac7c3 = _0xbae41a[_0x655214(0x152)]('@s.whatsapp.net', '');[_0x386233] = await _0x4e3732[_0x655214(0xf3)]('+' + _0xdac7c3); } } return console['log']({ 'result': _0x386233 }), _0x386233?.[_0x655214(0x129)]; } catch (_0x395896) { return console[_0x655214(0xf1)](_0x395896), ![]; } }; function replaceWithRandom(_0x320fad) { const _0x316ee8 = _0x32275e; let _0x364377 = _0x320fad; while (_0x364377[_0x316ee8(0x101)]('[') && _0x364377[_0x316ee8(0x101)](']')) { const _0x1a3aff = _0x364377[_0x316ee8(0x132)]('['), _0x2a8cd7 = _0x364377['indexOf'](']'); if (_0x1a3aff !== -0x1 && _0x2a8cd7 !== -0x1) { const _0x5ba731 = _0x364377[_0x316ee8(0x153)](_0x1a3aff + 0x1, _0x2a8cd7), _0x277dd5 = _0x5ba731['split'](',')[_0x316ee8(0xfc)](_0xbbceb3 => _0xbbceb3['trim']()); if (_0x277dd5[_0x316ee8(0x135)] > 0x0) { const _0x22adbe = Math[_0x316ee8(0xe6)](Math[_0x316ee8(0x110)]() * _0x277dd5[_0x316ee8(0x135)]), _0x51233d = _0x277dd5[_0x22adbe]; _0x364377 = _0x364377[_0x316ee8(0x153)](0x0, _0x1a3aff) + _0x51233d + _0x364377[_0x316ee8(0x153)](_0x2a8cd7 + 0x1); } } } return _0x364377; } function _0x1878() { const _0x1443a1 = ['unlinkSync', 'message', '511000PGzuNq', '@whiskeysockets/baileys', 'endsWith', 'chats.set', 'messages.update', 'mobile', '335433ULLRzT', 'open', 'requestPairingCode', 'writeFileSync', 'now', 'close', 'isDirectory', 'Unable\x20to\x20create\x20session.', 'existsSync', 'Chrome', 'replace', 'substring', '/contacts/', 'groupMetadata', '__one', 'QR\x20code\x20received,\x20please\x20scan\x20the\x20QR\x20code.', 'sendMessage', '6299097aiColD', 'delete', 'remoteJid', 'set', 'headersSent', 'readdir', 'Error\x20writing\x20to\x20', '../response.js', 'pollUpdates', 'contacts', 'authState', 'floor', '3453768XZEvYU', 'utf8', '.json\x20file\x20created\x20successfully.', 'mkdirSync', 'cwd', 'output', 'get', '.json', 'logout', '@g.us', 'log', '../database/dbpromise.js', 'onWhatsApp', 'join', '12FsfFHX', 'key', 'reject', 'pino', 'Unable\x20to\x20create\x20QR\x20code.', 'filter', 'silent', 'map', 'waUploadToServer', '_store', '8835616ErLaeL', 'caption', 'includes', 'exports', 'store', 'chats', 'buttonsMessage', 'notify', 'fromObject', '../loops/chatBot.js', 'Message', 'path', 'templateMessage', 'qrcode', 'fromMe', 'connection.update', '../functions/function.js', 'random', 'loggedOut', '../functions/x.js', '../dirname.js', 'startsWith', 'sessions', 'default', 'undefined', 'lstatSync', 'statusCode', 'stringify', 'This\x20is\x20not\x20group', 'isLegacy', '5178325igzWgI', 'body', '-chats.json', 'text', '@s.whatsapp.net', 'creds', 'Unable\x20to\x20create\x20pair\x20code.', 'json', 'status@broadcast', '592074IRKglw', 'md_', 'forEach', 'exists', 'writeToFile', 'Running\x20cleanup\x20before\x20exit.', 'insertIfAbsent', 'messages', 'APP_NAME', 'contacts.upsert', 'messaging-history.set', 'bind', 'indexOf', 'registered', 'error', 'length', 'env', 'type', 'end', 'Requesting\x20pairing\x20code...', 'Reconnecting...', 'update', 'has', '.json\x20file\x20already\x20exists,\x20skipping\x20creation.', 'UPDATE\x20instance\x20SET\x20qr\x20=\x20?\x20WHERE\x20instance_id\x20=\x20?', 'readdirSync']; _0x1878 = function () { return _0x1443a1; }; return _0x1878(); } const sendMessage = async (_0x1ae042, _0x43d9e6, _0x2b54d2) => { const _0x552e7f = _0x32275e; try { if (_0x2b54d2?.[_0x552e7f(0x120)]) { const _0x2410f3 = await getUrlInfo(_0x2b54d2?.[_0x552e7f(0x120)], { 'thumbnailWidth': 0x400, 'fetchOpts': { 'timeout': 0x1388 }, 'uploadImage': _0x1ae042[_0x552e7f(0xfd)] }); _0x2b54d2 = { 'text': replaceWithRandom(_0x2b54d2?.['text']), 'linkPreview': _0x2410f3 }; } else _0x2b54d2 = _0x2b54d2; return console[_0x552e7f(0xf1)]({ 'sendingMsg': _0x2b54d2 }), _0x2b54d2?.[_0x552e7f(0x100)] ? _0x2b54d2 = { ..._0x2b54d2, 'caption': replaceWithRandom(_0x2b54d2?.['caption']) } : _0x2b54d2 = _0x2b54d2, console[_0x552e7f(0xf1)]({ 'isLegacy': _0x1ae042?.[_0x552e7f(0x11c)] || 'NA', 'message': _0x2b54d2 }), await delay(0x3e8), _0x1ae042[_0x552e7f(0xda)](_0x43d9e6, _0x2b54d2); } catch (_0x33288f) { return console[_0x552e7f(0xf1)](_0x33288f), Promise[_0x552e7f(0xf7)](null); } }, getGroupData = async (_0x4f86d6, _0x22839a) => { const _0x2b8fff = _0x32275e; try { const _0x26f976 = await _0x4f86d6[_0x2b8fff(0xd7)](_0x22839a); return _0x26f976; } catch { return Promise['reject'](null); } }, formatPhone = _0x5a3211 => { const _0x56682e = _0x32275e; if (_0x5a3211[_0x56682e(0x144)]('@s.whatsapp.net')) return _0x5a3211; let _0x4cee12 = _0x5a3211[_0x56682e(0x152)](/\D/g, ''); return _0x4cee12 += '@s.whatsapp.net'; }, formatGroup = _0x1804a7 => { const _0x3bc4b8 = _0x32275e; if (_0x1804a7['endsWith'](_0x3bc4b8(0xf0))) return _0x1804a7; let _0x53e113 = _0x1804a7['replace'](/[^\d-]/g, ''); return _0x53e113 += _0x3bc4b8(0xf0); }, cleanup = () => { const _0x2508b1 = _0x32275e; console[_0x2508b1(0xf1)](_0x2508b1(0x12b)), sessions['forEach']((_0x3b44c9, _0x4fbfb7) => { const _0x18be4c = _0x2508b1; !_0x3b44c9[_0x18be4c(0x11c)] && _0x3b44c9['store'][_0x18be4c(0x12a)](sessionsDir(_0x4fbfb7 + '_store')); }); }, init = () => { const _0xa38af4 = _0x32275e, _0x1e446e = path['join'](dirName, 'sessions'); fs[_0xa38af4(0xe0)](_0x1e446e, (_0x433e45, _0x2a5abc) => { const _0x5568d1 = _0xa38af4; if (_0x433e45) throw _0x433e45; for (const _0x400e3a of _0x2a5abc) { if (!_0x400e3a['endsWith'](_0x5568d1(0xee)) || !_0x400e3a[_0x5568d1(0x114)]('md_') || _0x400e3a[_0x5568d1(0x101)](_0x5568d1(0xfe))) continue; const _0x55e72b = _0x400e3a['replace'](_0x5568d1(0xee), ''), _0x4ca710 = _0x55e72b['split']('_', 0x1)[0x0] !== 'md', _0x44b6d8 = _0x55e72b[_0x5568d1(0x153)](_0x4ca710 ? 0x7 : 0x3); createSession(_0x44b6d8, _0x4ca710); } }); }; module[_0x32275e(0x102)] = { 'isSessionExists': isSessionExists, 'createSession': createSession, 'getSession': getSession, 'deleteSession': deleteSession, 'getChatList': getChatList, 'isExists': isExists, 'sendMessage': sendMessage, 'formatPhone': formatPhone, 'formatGroup': formatGroup, 'cleanup': cleanup, 'init': init, 'getGroupData': getGroupData, 'getUrlInfo': getUrlInfo, 'downloadMediaMessage': downloadMediaMessage };